; ModuleID = 'main'
source_filename = "main"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@c = global i32 0
@d = global [100 x i32] undef
@0 = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@2 = private unnamed_addr constant [7 x i8] c"%d %d \00", align 1
@3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@4 = private unnamed_addr constant [25 x i8] c"Incompatible Dimensions\0A\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%10d\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

declare i32 @printk(i32*, ...)

declare i32 @scank(i32*, ...)

define i32 @main() {
FuncEntry:
  %temp = alloca i32, align 4
  %temp2 = alloca i32, align 4
  %temp125 = alloca i32, align 4
  %sum = alloca i32, align 4
  %temp1 = alloca i32, align 4
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %Res = alloca [1000 x i32], align 4
  %Arr2 = alloca [1000 x i32], align 4
  %Arr1 = alloca [1000 x i32], align 4
  %b2 = alloca i32, align 4
  %a1 = alloca i32, align 4
  %b1 = alloca i32, align 4
  %a2 = alloca i32, align 4
  store i32 0, i32* %a2, align 4
  store i32 0, i32* %b1, align 4
  store i32 0, i32* %a1, align 4
  store i32 2, i32* %b2, align 4
  %0 = load i32, i32* %b2, align 4
  store i32 %0, i32* getelementptr inbounds ([100 x i32], [100 x i32]* @d, i32 0, i32 1), align 4
  store i32 0, i32* %i, align 4
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  store i32 0, i32* %temp1, align 4
  %1 = call i32 (i32*, ...) @scank(i32* bitcast ([6 x i8]* @0 to i32*), i32* %a1, i32* %b1)
  store i32 0, i32* %i, align 4
  br label %ForCond

ForCond:                                          ; preds = %ForExit4, %FuncEntry
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %a1, align 4
  %4 = icmp slt i32 %2, %3
  br i1 %4, label %ForBody, label %ForExit

ForBody:                                          ; preds = %ForCond
  store i32 0, i32* %j, align 4
  br label %ForCond1

ForExit:                                          ; preds = %ForCond
  %5 = call i32 (i32*, ...) @scank(i32* bitcast ([7 x i8]* @2 to i32*), i32* %a2, i32* %b2)
  store i32 0, i32* %i, align 4
  br label %ForCond5

ForCond1:                                         ; preds = %ForBody2, %ForBody
  %6 = load i32, i32* %j, align 4
  %7 = load i32, i32* %b1, align 4
  %8 = icmp slt i32 %6, %7
  br i1 %8, label %ForBody2, label %ForExit4

ForBody2:                                         ; preds = %ForCond1
  %9 = call i32 (i32*, ...) @scank(i32* bitcast ([3 x i8]* @1 to i32*), i32* %temp1)
  %10 = load i32, i32* %temp1, align 4
  %11 = load i32, i32* %i, align 4
  %12 = mul i32 %11, 25
  %13 = load i32, i32* %j, align 4
  %14 = add i32 %12, %13
  %15 = bitcast [1000 x i32]* %Arr1 to i32*
  %16 = getelementptr i32, i32* %15, i32 %14
  store i32 %10, i32* %16, align 4
  %17 = load i32, i32* %j, align 4
  %18 = add i32 %17, 1
  store i32 %18, i32* %j, align 4
  br label %ForCond1

ForExit4:                                         ; preds = %ForCond1
  %19 = load i32, i32* %i, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %i, align 4
  br label %ForCond

ForCond5:                                         ; preds = %ForExit12, %ForExit
  %21 = load i32, i32* %i, align 4
  %22 = load i32, i32* %a2, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %ForBody6, label %ForExit8

ForBody6:                                         ; preds = %ForCond5
  store i32 0, i32* %j, align 4
  br label %ForCond9

ForExit8:                                         ; preds = %ForCond5
  %24 = load i32, i32* %b1, align 4
  %25 = load i32, i32* %a2, align 4
  %26 = icmp ne i32 %24, %25
  br i1 %26, label %Then, label %Else

ForCond9:                                         ; preds = %ForBody10, %ForBody6
  %27 = load i32, i32* %j, align 4
  %28 = load i32, i32* %b2, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %ForBody10, label %ForExit12

ForBody10:                                        ; preds = %ForCond9
  %30 = call i32 (i32*, ...) @scank(i32* bitcast ([3 x i8]* @3 to i32*), i32* %temp1)
  %31 = load i32, i32* %temp1, align 4
  %32 = load i32, i32* %i, align 4
  %33 = mul i32 %32, 25
  %34 = load i32, i32* %j, align 4
  %35 = add i32 %33, %34
  %36 = bitcast [1000 x i32]* %Arr2 to i32*
  %37 = getelementptr i32, i32* %36, i32 %35
  store i32 %31, i32* %37, align 4
  %38 = load i32, i32* %j, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %j, align 4
  br label %ForCond9

ForExit12:                                        ; preds = %ForCond9
  %40 = load i32, i32* %i, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* %i, align 4
  br label %ForCond5

Then:                                             ; preds = %ForExit8
  %42 = call i32 (i32*, ...) @printk(i32* bitcast ([25 x i8]* @4 to i32*))
  ret i32 0

Else:                                             ; preds = %ForExit8
  store i32 0, i32* %i, align 4
  br label %ForCond13

ForCond13:                                        ; preds = %ForExit20, %Else
  %43 = load i32, i32* %i, align 4
  %44 = load i32, i32* %a1, align 4
  %45 = icmp slt i32 %43, %44
  br i1 %45, label %ForBody14, label %ForExit16

ForBody14:                                        ; preds = %ForCond13
  store i32 0, i32* %j, align 4
  br label %ForCond17

ForExit16:                                        ; preds = %ForCond13
  store i32 0, i32* %i, align 4
  br label %ForCond26

ForCond17:                                        ; preds = %ForExit24, %ForBody14
  %46 = load i32, i32* %j, align 4
  %47 = load i32, i32* %b2, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %ForBody18, label %ForExit20

ForBody18:                                        ; preds = %ForCond17
  store i32 0, i32* %sum, align 4
  store i32 0, i32* %k, align 4
  br label %ForCond21

ForExit20:                                        ; preds = %ForCond17
  %49 = load i32, i32* %i, align 4
  %50 = add i32 %49, 1
  store i32 %50, i32* %i, align 4
  br label %ForCond13

ForCond21:                                        ; preds = %ForBody22, %ForBody18
  %51 = load i32, i32* %k, align 4
  %52 = load i32, i32* %b1, align 4
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %ForBody22, label %ForExit24

ForBody22:                                        ; preds = %ForCond21
  %54 = load i32, i32* %i, align 4
  %55 = mul i32 %54, 25
  %56 = load i32, i32* %k, align 4
  %57 = add i32 %55, %56
  %58 = bitcast [1000 x i32]* %Arr1 to i32*
  %59 = getelementptr i32, i32* %58, i32 %57
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %temp125, align 4
  %61 = load i32, i32* %k, align 4
  %62 = mul i32 %61, 25
  %63 = load i32, i32* %j, align 4
  %64 = add i32 %62, %63
  %65 = bitcast [1000 x i32]* %Arr2 to i32*
  %66 = getelementptr i32, i32* %65, i32 %64
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %temp2, align 4
  %68 = load i32, i32* %sum, align 4
  %69 = load i32, i32* %temp125, align 4
  %70 = load i32, i32* %temp2, align 4
  %71 = mul i32 %69, %70
  %72 = add i32 %68, %71
  store i32 %72, i32* %sum, align 4
  %73 = load i32, i32* %k, align 4
  %74 = add i32 %73, 1
  store i32 %74, i32* %k, align 4
  br label %ForCond21

ForExit24:                                        ; preds = %ForCond21
  %75 = load i32, i32* %sum, align 4
  %76 = load i32, i32* %i, align 4
  %77 = mul i32 %76, 25
  %78 = load i32, i32* %j, align 4
  %79 = add i32 %77, %78
  %80 = bitcast [1000 x i32]* %Res to i32*
  %81 = getelementptr i32, i32* %80, i32 %79
  store i32 %75, i32* %81, align 4
  %82 = load i32, i32* %j, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %j, align 4
  br label %ForCond17

ForCond26:                                        ; preds = %ForExit33, %ForExit16
  %84 = load i32, i32* %i, align 4
  %85 = load i32, i32* %a1, align 4
  %86 = icmp slt i32 %84, %85
  br i1 %86, label %ForBody27, label %ForExit29

ForBody27:                                        ; preds = %ForCond26
  store i32 0, i32* %j, align 4
  br label %ForCond30

ForExit29:                                        ; preds = %ForCond26
  ret i32 0

ForCond30:                                        ; preds = %ForBody31, %ForBody27
  %87 = load i32, i32* %j, align 4
  %88 = load i32, i32* %b2, align 4
  %89 = icmp slt i32 %87, %88
  br i1 %89, label %ForBody31, label %ForExit33

ForBody31:                                        ; preds = %ForCond30
  %90 = load i32, i32* %i, align 4
  %91 = mul i32 %90, 25
  %92 = load i32, i32* %j, align 4
  %93 = add i32 %91, %92
  %94 = bitcast [1000 x i32]* %Res to i32*
  %95 = getelementptr i32, i32* %94, i32 %93
  %96 = load i32, i32* %95, align 4
  store i32 %96, i32* %temp, align 4
  %97 = load i32, i32* %temp, align 4
  %98 = call i32 (i32*, ...) @printk(i32* bitcast ([5 x i8]* @5 to i32*), i32 %97)
  %99 = load i32, i32* %j, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %j, align 4
  br label %ForCond30

ForExit33:                                        ; preds = %ForCond30
  %101 = call i32 (i32*, ...) @printk(i32* bitcast ([2 x i8]* @6 to i32*))
  %102 = load i32, i32* %i, align 4
  %103 = add i32 %102, 1
  store i32 %103, i32* %i, align 4
  br label %ForCond26
}
