; ModuleID = 'main'
source_filename = "main"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@0 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

declare i32 @print(i32*, ...)

declare i32 @scan(i8*, ...)

define i32 @quicksort(i32* %0, i32 %1, i32 %2) {
FuncEntry:
  %temp7 = alloca i32, align 4
  %mid = alloca i32, align 4
  %temp = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %right = alloca i32, align 4
  %left = alloca i32, align 4
  %a = alloca i32*, align 8
  store i32* %0, i32** %a, align 8
  store i32 %1, i32* %left, align 4
  store i32 %2, i32* %right, align 4
  %3 = load i32, i32* %left, align 4
  store i32 %3, i32* %i, align 4
  %4 = load i32, i32* %right, align 4
  store i32 %4, i32* %j, align 4
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* %j, align 4
  %7 = add i32 %5, %6
  store i32 %7, i32* %temp, align 4
  %8 = load i32, i32* %temp, align 4
  %9 = sdiv i32 %8, 2
  store i32 %9, i32* %temp, align 4
  store i32 0, i32* %mid, align 4
  %10 = load i32, i32* %temp, align 4
  %11 = load i32*, i32** %a, align 8
  %12 = getelementptr i32, i32* %11, i32 %10
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %mid, align 4
  br label %WhileCond

WhileCond:                                        ; preds = %Then, %WhileExit6, %FuncEntry
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %j, align 4
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %WhileBody, label %WhileExit

WhileBody:                                        ; preds = %WhileCond
  br label %WhileCond1

WhileExit:                                        ; preds = %WhileCond
  %17 = load i32, i32* %left, align 4
  %18 = load i32, i32* %j, align 4
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %Then8, label %Merge10

WhileCond1:                                       ; preds = %WhileBody2, %WhileBody
  %20 = load i32, i32* %i, align 4
  %21 = load i32*, i32** %a, align 8
  %22 = getelementptr i32, i32* %21, i32 %20
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %mid, align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %WhileBody2, label %WhileExit3

WhileBody2:                                       ; preds = %WhileCond1
  %26 = load i32, i32* %i, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %i, align 4
  br label %WhileCond1

WhileExit3:                                       ; preds = %WhileCond1
  br label %WhileCond4

WhileCond4:                                       ; preds = %WhileBody5, %WhileExit3
  %28 = load i32, i32* %mid, align 4
  %29 = load i32, i32* %j, align 4
  %30 = load i32*, i32** %a, align 8
  %31 = getelementptr i32, i32* %30, i32 %29
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %28, %32
  br i1 %33, label %WhileBody5, label %WhileExit6

WhileBody5:                                       ; preds = %WhileCond4
  %34 = load i32, i32* %j, align 4
  %35 = sub i32 %34, 1
  store i32 %35, i32* %j, align 4
  br label %WhileCond4

WhileExit6:                                       ; preds = %WhileCond4
  %36 = load i32, i32* %i, align 4
  %37 = load i32, i32* %j, align 4
  %38 = icmp sle i32 %36, %37
  br i1 %38, label %Then, label %WhileCond

Then:                                             ; preds = %WhileExit6
  %39 = load i32, i32* %i, align 4
  %40 = load i32*, i32** %a, align 8
  %41 = getelementptr i32, i32* %40, i32 %39
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %temp7, align 4
  %43 = load i32, i32* %j, align 4
  %44 = load i32*, i32** %a, align 8
  %45 = getelementptr i32, i32* %44, i32 %43
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* %i, align 4
  %48 = load i32*, i32** %a, align 8
  %49 = getelementptr i32, i32* %48, i32 %47
  store i32 %46, i32* %49, align 4
  %50 = load i32, i32* %temp7, align 4
  %51 = load i32, i32* %j, align 4
  %52 = load i32*, i32** %a, align 8
  %53 = getelementptr i32, i32* %52, i32 %51
  store i32 %50, i32* %53, align 4
  %54 = load i32, i32* %i, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %i, align 4
  %56 = load i32, i32* %j, align 4
  %57 = sub i32 %56, 1
  store i32 %57, i32* %j, align 4
  br label %WhileCond

Then8:                                            ; preds = %WhileExit
  %58 = load i32*, i32** %a, align 8
  %59 = load i32, i32* %left, align 4
  %60 = load i32, i32* %j, align 4
  %61 = call i32 @quicksort(i32* %58, i32 %59, i32 %60)
  br label %Merge10

Merge10:                                          ; preds = %WhileExit, %Then8
  %62 = load i32, i32* %i, align 4
  %63 = load i32, i32* %right, align 4
  %64 = icmp slt i32 %62, %63
  br i1 %64, label %Then11, label %Merge13

Then11:                                           ; preds = %Merge10
  %65 = load i32*, i32** %a, align 8
  %66 = load i32, i32* %i, align 4
  %67 = load i32, i32* %right, align 4
  %68 = call i32 @quicksort(i32* %65, i32 %66, i32 %67)
  br label %Merge13

Merge13:                                          ; preds = %Merge10, %Then11
  ret i32 0
}

define i32 @main() {
FuncEntry:
  %i = alloca i32, align 4
  %a = alloca [10000 x i32], align 4
  %temp = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 0, i32* %n, align 4
  store i32 0, i32* %temp, align 4
  %0 = call i32 (i8*, ...) @scan(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @0, i32 0, i32 0), i32* %n)
  store i32 0, i32* %i, align 4
  store i32 0, i32* %i, align 4
  br label %ForCond

ForCond:                                          ; preds = %ForIter, %FuncEntry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n, align 4
  %3 = icmp slt i32 %1, %2
  br i1 %3, label %ForBody, label %ForExit

ForBody:                                          ; preds = %ForCond
  %4 = call i32 (i8*, ...) @scan(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i32 0, i32 0), i32* %temp)
  %5 = load i32, i32* %temp, align 4
  %6 = load i32, i32* %i, align 4
  %7 = bitcast [10000 x i32]* %a to i32*
  %8 = getelementptr i32, i32* %7, i32 %6
  store i32 %5, i32* %8, align 4
  br label %ForIter

ForIter:                                          ; preds = %ForBody
  %9 = load i32, i32* %i, align 4
  %10 = add i32 %9, 1
  store i32 %10, i32* %i, align 4
  br label %ForCond

ForExit:                                          ; preds = %ForCond
  %11 = bitcast [10000 x i32]* %a to i32*
  %12 = load i32, i32* %n, align 4
  %13 = sub i32 %12, 1
  %14 = call i32 @quicksort(i32* %11, i32 0, i32 %13)
  store i32 0, i32* %i, align 4
  br label %ForCond1

ForCond1:                                         ; preds = %ForIter3, %ForExit
  %15 = load i32, i32* %i, align 4
  %16 = load i32, i32* %n, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %ForBody2, label %ForExit4

ForBody2:                                         ; preds = %ForCond1
  %18 = load i32, i32* %i, align 4
  %19 = bitcast [10000 x i32]* %a to i32*
  %20 = getelementptr i32, i32* %19, i32 %18
  %21 = load i32, i32* %20, align 4
  %22 = call i32 (i32*, ...) @print(i32* bitcast ([4 x i8]* @2 to i32*), i32 %21)
  br label %ForIter3

ForIter3:                                         ; preds = %ForBody2
  %23 = load i32, i32* %i, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %ForCond1

ForExit4:                                         ; preds = %ForCond1
  ret i32 0
}
