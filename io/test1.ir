; ModuleID = 'main'
source_filename = "main"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@0 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1

declare i32 @print(i8*, ...)

declare i32 @scan(i8*, ...)

define i32 @main() {
FuncEntry:
  %x = alloca double, align 8
  %arr2 = alloca [10 x [5 x double]], align 8
  %0 = bitcast [10 x [5 x double]]* %arr2 to [5 x double]*
  %1 = getelementptr [5 x double], [5 x double]* %0, i32 2
  %2 = bitcast [5 x double]* %1 to double*
  %3 = getelementptr double, double* %2, i32 3
  store double 5.200000e+00, double* %3, align 8
  %4 = bitcast [10 x [5 x double]]* %arr2 to [5 x double]*
  %5 = getelementptr [5 x double], [5 x double]* %4, i32 1
  %6 = bitcast [5 x double]* %5 to double*
  %7 = getelementptr double, double* %6, i32 4
  store double 2.500000e+00, double* %7, align 8
  %8 = bitcast [10 x [5 x double]]* %arr2 to [5 x double]*
  %9 = getelementptr [5 x double], [5 x double]* %8, i32 1
  %10 = bitcast [5 x double]* %9 to double*
  %11 = getelementptr double, double* %10, i32 4
  %12 = load double, double* %11, align 8
  %13 = call i32 (i8*, ...) @print(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), double %12)
  store double 0.000000e+00, double* %x, align 8
  %14 = bitcast [10 x [5 x double]]* %arr2 to [5 x double]*
  %15 = getelementptr [5 x double], [5 x double]* %14, i32 2
  %16 = bitcast [5 x double]* %15 to double*
  %17 = getelementptr double, double* %16, i32 3
  %18 = load double, double* %17, align 8
  store double %18, double* %x, align 8
  %19 = load double, double* %x, align 8
  %20 = call i32 (i8*, ...) @print(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1, i32 0, i32 0), double %19)
  ret i32 0
}
